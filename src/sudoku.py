import numpy as npimport matplotlib.pyplot as pltclass Sudoku():    def __init__(self, filename):        self.sudoku_problem = np.zeros((9,9))        self.read(filename)        self.sudoku = np.copy(self.sudoku_problem)    def read(self, filename):        self.sudoku_problem = np.genfromtxt(filename,                                            delimiter=',').astype(int)    def show(self):         fig, ax = plt.subplots(1,1, figsize=(4,4))        ax.axis('off')        ax.axis('equal')        # grid        for x in [-0.5, 2.5, 5.5, 8.5]:            ax.plot([x, x], [-0.5, 8.5], '-k', lw=2)        for x in [0.5, 1.5, 3.5, 4.5, 6.5, 7.5]:            ax.plot([x, x], [-0.5, 8.5], '-k', lw=1)        for y in [-0.5, 2.5, 5.5, 8.5]:            ax.plot([-0.5, 8.5], [y, y], '-k', lw=2)        for y in [0.5, 1.5, 3.5, 4.5, 6.5, 7.5]:            ax.plot([-0.5, 8.5], [y, y], '-k', lw=1)        ax.fill([-0.5, 2.5, 2.5, -0.5], [2.5, 2.5, 5.5, 5.5],                color='lightgray')        ax.fill([5.5, 8.5, 8.5, 5.5], [2.5, 2.5, 5.5, 5.5],                 color='lightgray')        ax.fill([2.5, 5.5, 5.5, 2.5], [-0.5, -0.5, 2.5, 2.5],                 color='lightgray')        ax.fill([2.5, 5.5, 5.5, 2.5], [5.5, 5.5, 8.5, 8.5],                 color='lightgray')        # solution        for i in range(9):            for j in range(9):                if self.sudoku[i,j] != 0:                    if self.sudoku[i,j] == self.sudoku_problem[i,j]:                        color='k'                    else:                        color='orange'                    ax.text(j,8-i, self.sudoku[i,j],                            ha='center', va='center',                            color=color, fontsize=10)        plt.show()        if __name__=='__main__':    sudoku = Sudoku('../data/sudoku_1.txt')    sudoku.show()